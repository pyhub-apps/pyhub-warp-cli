name: Test

on:
  push:
    branches: [ main, develop, "feature/*" ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    
    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: '1.21'
        cache: true
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
      with:
        file: ./coverage.txt
        fail_ci_if_error: false
        verbose: true
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Check formatting
      run: |
        if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
          echo "Please run 'go fmt ./...' to format your code"
          gofmt -l .
          exit 1
        fi
    
    - name: Run integration tests
      run: go test -v -tags=integration ./test/integration/...
    
    - name: Build binary for E2E tests
      run: go build -o sejong ./cmd/sejong
    
    - name: Run E2E tests
      run: go test -v -tags=e2e ./test/e2e/...