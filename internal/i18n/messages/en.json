{
  "cli.short": "Korean Law Information Search CLI Tool",
  "cli.long": "Sejong CLI is a command-line tool that enables quick and easy\nsearching of Korean law information using the National Law Information Center Open API.\n\nFor detailed usage, see 'sejong --help'.",
  "cli.verbose": "Enable verbose logging",
  
  "version.short": "Display version information",
  "version.long": "Display version information and build details of Sejong CLI.",
  "version.output.title": "Sejong CLI",
  "version.output.version": "Version: %s",
  "version.output.commit": "Git Commit: %s",
  "version.output.built": "Built: %s",
  "version.output.goversion": "Go Version: %s",
  "version.output.platform": "OS/Arch: %s/%s",
  
  "config.short": "Manage configuration",
  "config.long": "Manage Sejong CLI configuration.\nStore and retrieve API keys and other settings.",
  "config.example": "  # Set API key\n  sejong config set law.key YOUR_API_KEY\n  \n  # Get API key\n  sejong config get law.key\n  \n  # Show configuration file path\n  sejong config path",
  "config.set.short": "Set configuration value",
  "config.set.long": "Store a value for the specified key.",
  "config.set.example": "  # Set API key\n  sejong config set law.key YOUR_API_KEY",
  "config.set.invalidKey": "Invalid configuration key format: %s (allowed: law.key)",
  "config.set.emptyValue": "Configuration value is empty",
  "config.set.failed": "Failed to set API key: %w",
  "config.set.saveFailed": "Failed to save configuration: %w",
  "config.set.success": "Configuration saved: %s = %s",
  "config.set.apiKeySuccess": "API key successfully configured",
  "config.get.short": "Get configuration value",
  "config.get.long": "Retrieve the value for the specified key.",
  "config.get.example": "  # Get API key\n  sejong config get law.key",
  "config.get.invalidKey": "Invalid configuration key format: %s",
  "config.get.notFound": "Configuration not found: %s",
  "config.get.apiKeyNotSet": "API key is not configured",
  "config.get.apiKeyHelp": "To set API key: sejong config set law.key <your-api-key>",
  "config.path.short": "Show configuration file path",
  "config.path.long": "Display the path to the configuration file.",
  "config.path.output": "Configuration file path: %s",
  
  "law.short": "Search and view law information",
  "law.long": "Search Korean law information and view details from the National Law Information Center.\n\nExamples:\n  sejong law \"Personal Information Protection Act\"  # Search\n  sejong law detail 001234  # View details\n  sejong law history 001234  # View history",
  
  "law.search.short": "Search laws",
  "law.search.long": "Search laws from the National Law Information Center.",
  
  "law.detail.short": "View law details",
  "law.detail.long": "View detailed information by law ID.",
  "law.detail.flag.articles": "Include articles",
  "law.detail.searching": "Fetching law details... (ID: %s)",
  "law.detail.searchComplete": "Law details retrieved: %s",
  "law.detail.error.emptyID": "Law ID is empty",
  "law.detail.error.failed": "Failed to get law details: %v",
  
  "law.history.short": "View law amendment history",
  "law.history.long": "View enactment and amendment history by law ID.",
  "law.history.flag.limit": "Limit number of history records",
  "law.history.searching": "Fetching law history... (ID: %s)",
  "law.history.searchComplete": "Law history retrieved: %d records",
  "law.history.error.emptyID": "Law ID is empty",
  "law.history.error.failed": "Failed to get law history: %v",
  "law.flag.format": "Output format (table, json)",
  "law.flag.page": "Page number",
  "law.flag.size": "Page size",
  "law.flag.source": "Search source (all: unified, nlic: national laws, elis: local ordinances)",
  "law.searching": "Searching... (query: %s, page: %d, size: %d)",
  "law.searchComplete": "Search complete: %d results (page: %d, size: %d)",
  "law.outputFailed": "Output failed",
  "law.checkFormat": "Please check the output format",
  
  "ordinance.short": "Search and view local ordinances",
  "ordinance.long": "Search for local ordinances and rules from the Local Regulations Information System (ELIS).\n\nExamples:\n  sejong ordinance \"parking ordinance\"  # Search\n  sejong ordinance detail ORD123456  # View details",
  "ordinance.search.short": "Search local ordinances",
  "ordinance.search.long": "Search for ordinances and rules from the Local Regulations Information System.",
  "ordinance.detail.short": "View ordinance details",
  "ordinance.detail.long": "View detailed information using an ordinance ID.",
  "ordinance.flag.format": "Output format (table, json)",
  "ordinance.flag.page": "Page number",
  "ordinance.flag.size": "Page size",
  "ordinance.flag.region": "Region filter (e.g., Seoul, Busan, Gyeonggi)",
  "ordinance.flag.sort": "Sort order (date: by date, name: by name)",
  
  "error.emptyQuery": "Search query is empty",
  "error.noApiKey": "API key is not configured",
  "error.apiKeyRequired": "API key configuration required",
  "error.apiKeySetupTitle": "üîê API Key Configuration Required",
  "error.apiKeySetupDesc": "An authentication key is required to use the National Law Information Center Open API.",
  "error.apiKeySetupSteps": "üìã How to configure:",
  "error.apiKeyStep1": "1Ô∏è‚É£  Get an authentication key",
  "error.apiKeyStep1Url": "   ‚Üí https://open.law.go.kr/LSO/openApi/cuAskList.do",
  "error.apiKeyStep2": "2Ô∏è‚É£  Configure the authentication key",
  "error.apiKeyStep2Cmd": "   ‚Üí sejong config set law.key <your-api-key>",
  "error.apiKeyTip": "üí° Tip: Copy the command above to use it!",
  "error.copyHintMac": "   (Mac: Copy with Cmd+C)",
  "error.copyHintWindows": "   (Windows: Copy with Ctrl+C or right-click)",
  "error.copyHintLinux": "   (Linux: Copy with Ctrl+Shift+C)",
  
  "output.table.law": "Law Name",
  "output.table.type": "Law Type",
  "output.table.ministry": "Ministry",
  "output.table.effectiveDate": "Effective Date",
  "output.table.noResults": "No search results found",
  "output.table.totalCount": "Total %d laws",
  
  "success.prefix": "‚úÖ %s",
  "error.prefix": "‚ùå %s",
  "warning.prefix": "‚ö†Ô∏è  %s",
  "info.prefix": "‚ÑπÔ∏è  %s"
}